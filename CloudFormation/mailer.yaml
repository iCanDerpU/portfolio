AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  IdentityArn:
    Type: String
    Description: SES Identity to send emails from
    
  CodeKey:
    Type: String
    Description: S3 directory pointing to the ContactLambda function

  CFBucket:
    Type: String
    Description: The S3 Bucket name to fetch the templates from

Resources:
  ContactLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-contact
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      Code:
        S3Bucket: !Ref CFBucket
        S3Key: !Ref CodeKey
      Role: !GetAtt ContactLambdaRole.Arn


  ContactLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-contact
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SESsendemail
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ses:SendEmail
                Resource: !Ref IdentityArn

  ContactApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: vkaramoutas contact API

  ContactApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - OptionsMethod
      - PostMethod
    Properties:
      RestApiId: !Ref ContactApi


  ContactApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ContactApiDeployment
      MethodSettings:
        - ResourcePath: /
          HttpMethod: OPTIONS
        - ResourcePath: /
          HttpMethod: POST
      RestApiId: !Ref ContactApi
      StageName: vkaramoutas-contact
  
  OptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactApi
      ResourceId: !GetAtt ContactApi.RootResourceId
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - ResponseParameters:
              "method.response.header.Access-Control-Allow-Origin": "'*'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              StatusCode: "200"
        PassthroughBehavior: WHEN_NO_MATCH
      MethodResponses:
        - StatusCode: "200"
          ResponseModels:
            "application/json": "Empty"
          ResponseParameters: 
              "method.response.header.Access-Control-Allow-Origin": false
              "method.response.header.Access-Control-Allow-Methods": false

              
  PostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ContactApi
      ResourceId: !GetAtt ContactApi.RootResourceId
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              "method.response.header.Access-Control-Allow-Origin": "'*'"
              StatusCode: "200"
        PassthroughBehavior: WHEN_NO_MATCH
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ContactLambda.Arn}/invocations"
      MethodResponses:
        - StatusCode: "200"
          ResponseModels:
            "application/json": "Empty"
          ResponseParameters: 
              "method.response.header.Access-Control-Allow-Origin": false
